21/05/24-
methods of stringbuilder-
1. toCompare()
2.Replace()
3.insert()
4.indexof()
5.lastindexof()
6.reverse()
7.tostring()
8.Replacefirst()
9.ReplaceAll()

New topic-Array!
Array is a collection of same data type!
Array is used for storing data
Array size can be fixed

Types of Array-
1. Initialize array(1D Array)
2.2D Array
3. Multi-dimensional Array (3D Array) 
4.Jagged Array

14/06/24-
EXCEPTION HANDLING
1!Run Time Stack Mechanism
2!Default exception handling in java
3!exception Heriearcy 
4!Customized exception handling
5!Control flow in try catch block
6!Method to print exception information
7!finally block
8!Difference btw final,finally and finalise
9!Throw Keyword
10!Throws Keyword
11!Customized or user defined exception

Exception=two category of exception-
1Runtime exception
2Error =1.Runtime
        2.Compiletime

 #The message shows in  the console  that is the exceptionandling in your program that message shows with the help of RUNTIME STACK MECHANISM       
 Jo method reponsible hota hai exception ke liye bo automatic EXCEPTION OBJECT create kr deta hai phir bo exception OBJECT JVM ke pass jata hai then Default Exception Handler ki help se bo exception message console pr print ho jata hai!

 JVM->Default Exception Handler ->print the exception message in our console
Notes-
 1!For every thread(task)  JVM will create Runtime Stack

 2!Every method call one entry will be stored in Stack this entry is called stack frame or activation record

 3!JVM is reponsible to destroy empty stack
 
4!Method is reponsible for create a exception OBJECT with the help of JVM in this object name of exception,description,and location are present and this exception object is handover to JVM. JVM will maintain Default Exception Handler and this Handler dont do anything only show message in the console

Exception=1Exception->1.Runtime(Unchecked exception)=
                   1!ArithmeticException
                   2!NullPointerException
                   3!ArrayIndexOutOfBoundsException
                   4!ClassCastException
                   5!StringIndexOutOfBoundsException
  
                  2.Compiletime(Checked exception)=1.IO exception
                                2.Interputed exception
                                3.Remote exception
                                4.Illegalargument exception

          2.Error=1!Runtime->1!Memory error
                             2!System error
                  2!Compiletime->Syntax error

# Object->Throwable->Exception

 we handle exception in our program by Try & catch
 Try->Risky code                 

 20/06/24-
MULTITHREADING
!Increase the performance of our software
!In multithreading many tasks execute simultaneously
!Thread bahi hota hai jo kisi pr dependent na ho 
!Thread- independent execution of flow

Types of multithreading-
1.Process based multithreading-Depends on operating System
!!Process based multithreading is depend or OS level  or it is suitable for OS level executing several tasks simultaneously where each task separate independent program there is no depedency between first program and second program.
!!Executing several task simultaneously is a concept of multitasking!

2.Thread based -Depends on programmer
!Executing several tasks simultaneously  where each task is a separate independent part of the same program is called thread based multitasking and  each independent part is called thread


Note -!Java never be communicate with operating System!
      !C language se bane method ko native bolte hai or C only one language which is directly interact with operating System

!We can define a thread in the following 2 ways-
1.By extending Thread class
2.By implementing runable interface

Thread schedular is the part of JVM it is responsible to schedule thread that is if multiple  threads are waiting to get the chance of execution then iw which order thread will be executed is decided by thread schedular. We cant expect exact algorithm followed by thread schedular it is varried from JVM to JVM.We cant expect thread execution order and exact output .Hence whenever situation comes to multithreading there is no gurantee for exact output.

Thread schedular work on algorithm 

#Thread Priority valid range is 1 to 10 1 is minimum priority and 10  is max priority dafault priority is generated by JVM .Customized priority is generated by programmer .

#Thread schedular will use priority by allocating processor 

#The thread which is having highest priority will get chance first .

#If two threads having same  priority then we cant expexct exact execution order it depends on thread schedular

#The Default priority only for the main thread is 5 but for all remaining threads Default Priority wil be inherited from parent to child that is whatever priority parent have the same priority will be their for the child thread

24/06/24-

Yeild Method():-This method cause to pass current executing thread to give the chance for waiting thread of same priority if there is no waiting thread are all waiting threads have low priority then some threads can continue its execution if multiple thread are waiting with same priority then which waiting  thread will get the chance we cant expect it depends on thread schedular. The thread which is yeild when it will get the chance once again it depends on thread schedular 


Join Method():-


Sleep Method():-

#Jab dono threads ek dusre thread ka wait krte hai to ue hum deadlock condition bolte hai!

#If main thread cause join method( ) on child thread object and child thread cause join method on main thread object then both thread will be wait forever and the program will be stuck this is something like deadlock condition 

#Daemon Threading:-The thread which are executing in the background are called deman thread for example garbage collector,signal dispature ,attachlistener. The main objective of deman  thread is to provide support for non-deman thread for example the main thread run with low memory then JVM run garbage collector to destroy useless object so that number of bits of free memory will be improve .With these free memory main thread can continue its execution.Usually deman thread having low priority but based on our requirement deman thread can run with high priority also.


IMPORTANT TOPICS IN MULTITHREADING-
1.WAIT
2.NOTIFY
3.NOTIFY ALL


OOPS CONCEPTS:-

CONTENT ->
1.Data hiding
2.Abstraction
3.Interface
4.Abstract class
5.Encapsulation
6.Tightly Encapsulation class
7.IS-A relationship
8. HAS-A relationship
9.Method Signature
10.Overloading
11.Overring
12.Polymorphism
13.Static control flow
14.Constructor
15.Coupling
16. Access Modifiers ->  Static keyword ,Final keyword ,Public,private,default , abstract ,native , strictFP , synchronized , Transient , Volatile.

Abstraction-
the set of services we are offering is concept of abstraction 
For ex-through bank atm         bank people  are highlighting the set of services what they are offering without highlighting internal implementation.Advantage of abstraction is:-
!We can achieve security because we are not highlighting are internal implementation
!Without effecting outside person we can able to perform any type of changes in are internal System and hence enhancement will become easy
!It improve maintainability of the application 
!It improve readability of the application
!It improve easyness to use our system
!By using interface and abstract class we can implement abstraction

Encapsulation-
The process of binding data and corresponding methods into a single unit is nothing but encapsulation .Encapsulation is a combination of data hiding and abstraction 
Advantage of Encapsulation is:-
! we can acheive security 
!Enhancement will become easy
!It improve maintainability of the application

IMPORTANT-
Hesa relationship also known as aggregation and composition 
There is no specific keyword to implement hesa relationship but most of the time we are depending on new keyword. The main Advantage od hesa relationship is reusablility of the code

Composition
Definition: A relationship where one class contains another class. The contained class cannot exist independently.
Example: A Car has an Engine. If the Car is destroyed, the Engine is also destroyed.


Composition
Definition: A relationship where one class contains another class. The contained class cannot exist independently.
Example: A Car has an Engine. If the Car is destroyed, the Engine is also destroyed.

Aggregation
Definition: A relationship where one class contains another class, but the contained class can exist independently.
Example: A Library has Books. If the Library is closed, the Books still exist.

Note-
!The whole property we can access then we use Is-a relationship
!A single property we can access in the whole program then we use Has-a relationship

Is-a vs Has-a relationships:-
If we want total functionality of a  class automatically  then we should go for Is-a relationship
If we want part of the functionality then we should go for Has-a relationship


!METHOD SIGNATURE-
Method signature is nothing but method name and method parameters

Public Static int addme(int x,int y);
Public Static int addme(int x,int y);
agar do method ke argument same hote hai to ambiguity problem cause ho jati hai then avoid the ambiguity problem the concept comes is Overloading 

I!n java method signature consist of method names followed argument type .Return type is not part of method signature in java 
!Compiler will use method signature to resolve method calls
!Within a class two method with same signature not allowed 

OVERRIDING-
!It is a process of redefining the method of the parent class in the child class

!whatever method parent has bydefault available  to the child through inheritance .If child class not satisfied with parent class implementation then child is allow to redefine that method based on our requirement ,this process is called OVERRIDING

Very important-
Note1-In overriding method resolution is always takecare by JVM  based on run-time object and hence overriding is also considerd as run-time Polymorphism ,dynamic Polymorphism, latebinding. 

Note2-In Overloading method resolution is always takecare by compiler .Overloading is always considerd by compile-time Polymorphism ,static Polymorphism,early binding Polymorphism

#COUPLING-
Coupling is nothing but the degree of interdependence between software modules. A module is loosely coupled with
another module if it depends on it little. A module is tightly coupled with another module if it depends
on it heavily. A loosely coupled module is easy to modify, test, and reuse. A tightly
coupled module is difficult to maintain.


!If depedency is more than it is considerd as tightly Coupling and if depedency is less than it is considerd as loosely Coupling .Tightly Coupling is not a good programming practice because it has several disadvantages.


#12 Keywords in java-
1 Default 
2 Public
3 Private
4 Protected
These four keywords are used for accessibility

!Final Keyword
agar parent class ke content ko ap change nii krana chahte ho to ap us class ko final bana do

!Abstract Keyword
